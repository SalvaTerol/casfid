services:
    app:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: laravel_app
        restart: unless-stopped
        working_dir: /var/www
        volumes:
            - .:/var/www
        environment:
            - DB_HOST=db
            - DB_PORT=3306
            - DB_DATABASE=laravel
            - DB_USERNAME=root
            - DB_PASSWORD=root
            - REDIS_HOST=redis
        depends_on:
            - db
            - redis
        networks:
            - app-network

    db:
        image: mysql:8.0
        container_name: laravel_db
        restart: unless-stopped
        environment:
            MYSQL_DATABASE: laravel
            MYSQL_ROOT_PASSWORD: root
        volumes:
            - db_data:/var/lib/mysql
        ports:
            - "3306:3306"
        networks:
            - app-network

    redis:
        image: redis:alpine
        container_name: laravel_redis
        restart: unless-stopped
        ports:
            - "6379:6379"
        networks:
            - app-network

    composer:
        image: composer:latest
        container_name: composer
        working_dir: /var/www
        volumes:
            - .:/var/www
        command: [ "composer", "install", "--optimize-autoloader", "--no-interaction" ]

    nginx:
        image: nginx:alpine
        container_name: nginx
        restart: unless-stopped
        ports:
            - "8080:80"
        volumes:
            - .:/var/www
            - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
            - ./public:/var/www/public:ro
            - ./storage/app/public:/var/www/storage/app/public:ro
        depends_on:
            - app
        networks:
            - app-network

    worker:
        build:
            context: .
        container_name: laravel_worker
        depends_on:
            - app
            - composer
        volumes:
            - .:/var/www
        working_dir: /var/www
        command: /bin/sh -c "composer install --optimize-autoloader --no-interaction && php artisan queue:work --tries=3 --timeout=90"
        networks:
            - app-network

networks:
    app-network:
        driver: bridge

volumes:
    db_data:
